import type React from "react"
import type { Metadata } from "next"
import { Inter, Montserrat } from "next/font/google"
import "./globals.css"
import { ThemeProvider } from "@/components/theme-provider"
import { CodeProtection } from "@/components/code-protection"
import Script from "next/script"

// –ó–∞–≥—Ä—É–∂–∞–µ–º —à—Ä–∏—Ñ—Ç Montserrat
const montserrat = Montserrat({
  subsets: ["latin", "cyrillic"],
  display: "swap",
  variable: "--font-montserrat",
})

// –ó–∞–≥—Ä—É–∂–∞–µ–º —à—Ä–∏—Ñ—Ç Inter
const inter = Inter({
  subsets: ["latin", "cyrillic"],
  display: "swap",
  variable: "--font-inter",
})

export const metadata: Metadata = {
  title: "–†–∞—Å—á–µ—Ç —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–≥–æ —Ä–∏—Å–∫–∞ | SCORE2",
  description: "–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à 10-–ª–µ—Ç–Ω–∏–π —Ä–∏—Å–∫ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ —Å–∏—Å—Ç–µ–º–µ SCORE2 –∏ SCORE2-OP",
  icons: {
    icon: "/favicon.ico",
  },
    generator: 'v0.app'
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="ru" className={`${montserrat.variable} ${inter.variable}`}>
      <head>
        {/* –†–∞–∑—Ä–µ—à–∞–µ–º –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã Google Analytics */}
        <meta name="robots" content="index, follow" />
      </head>
      <body className={montserrat.className}>
        {/* Google Analytics - GDPR —Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–≥–ª–∞—Å–∏—è */}
        <Script src="https://www.googletagmanager.com/gtag/js?id=G-0603XM5Z1H" strategy="afterInteractive" />
        <Script id="google-analytics" strategy="afterInteractive">
          {`
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Analytics —Å –ø–æ–ª–Ω—ã–º GDPR —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ–º
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
    gtag('js', new Date());
    
    // GDPR-—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–ï–ó –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–≥–ª–∞—Å–∏—è
    gtag('config', 'G-0603XM5Z1H', {
      // === –ê–ù–û–ù–ò–ú–ò–ó–ê–¶–ò–Ø –î–ê–ù–ù–´–• ===
      anonymize_ip: true,                    // –ê–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—è IP-–∞–¥—Ä–µ—Å–æ–≤ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è GDPR)
      allow_google_signals: false,           // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Google Signals
      allow_ad_personalization_signals: false, // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º—ã
      
      // === –£–ü–†–ê–í–õ–ï–ù–ò–ï COOKIES ===
      cookie_expires: 7776000,               // 90 –¥–Ω–µ–π (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ –¥–ª—è GDPR)
      cookie_update: true,                   // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ cookies –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏
      cookie_flags: 'SameSite=Strict;Secure', // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ cookies
      cookie_domain: 'auto',                 // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
      
      // === –û–¢–ü–†–ê–í–ö–ê –î–ê–ù–ù–´–• ===
      send_page_view: true,                  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü
      transport_type: 'beacon',              // –ù–∞–¥–µ–∂–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      
      // === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–û–°–¢–ò ===
      client_storage: 'cookies',             // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ cookies (–Ω–µ localStorage)
      store_gac: false,                      // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Google Ads cookies
      
      // === –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ü–ê–†–ê–ú–ï–¢–†–´ –î–õ–Ø –ú–ï–î–ò–¶–ò–ù–°–ö–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===
      custom_map: {
        'custom_parameter_1': 'app_type',
        'custom_parameter_2': 'calculation_type',
        'custom_parameter_3': 'medical_context'
      },
      
      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      app_type: 'medical_calculator',
      calculation_type: 'cardiovascular_gfr_risk',
      medical_context: 'anonymous_healthcare_tool'
    });
    
    // === –û–¢–ü–†–ê–í–ö–ê –ù–ê–ß–ê–õ–¨–ù–û–ì–û –°–û–ë–´–¢–ò–Ø –° –ö–û–ù–¢–ï–ö–°–¢–û–ú ===
    gtag('event', 'app_initialized', {
      event_category: 'application_lifecycle',
      event_label: 'medical_calculator_loaded',
      app_version: '2.0',
      medical_tool: true,
      gdpr_compliant: true,
      anonymized: true,
      value: 1
    });
    
    // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–Ø –°–û–ë–´–¢–ò–ô (–í–°–ï –ê–ù–û–ù–ò–ú–ù–´–ï) ===
    
    // –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
    window.trackEvent = function(action, category, label, value) {
      gtag('event', action, {
        event_category: category || 'general',
        event_label: label || 'unknown',
        value: value || 1,
        medical_context: true,
        anonymized: true,
        gdpr_compliant: true,
        timestamp: Date.now()
      });
    };

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–æ–≤ —Ä–∏—Å–∫–∞ (–ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω–æ)
    window.trackRiskCalculation = function(riskCategory, calculationMethod, riskScore, calculatorType) {
      const riskScoreRange = getRiskScoreRange(riskScore);
      
      gtag('event', 'risk_calculation_completed', {
        event_category: 'medical_calculation',
        event_label: calculatorType + '_' + riskCategory,
        
        // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã)
        risk_category: riskCategory,
        calculation_method: calculationMethod || 'unknown',
        risk_score_range: riskScoreRange,
        calculator_type: calculatorType || 'unknown',
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        medical_tool: true,
        anonymized: true,
        gdpr_compliant: true,
        data_minimized: true,
        value: Math.min(Math.round(riskScore || 0), 100)
      });
      
      console.log('üìä Risk calculation tracked:', {
        type: calculatorType,
        category: riskCategory,
        method: calculationMethod,
        range: riskScoreRange
      });
    };

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–∞ PDF (–∞–Ω–æ–Ω–∏–º–Ω–æ)
    window.trackPDFExport = function(riskCategory, language, calculatorType) {
      gtag('event', 'pdf_export', {
        event_category: 'document_export',
        event_label: calculatorType + '_' + riskCategory,
        
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ)
        export_format: 'pdf',
        content_language: language || 'unknown',
        document_type: calculatorType + '_assessment_report',
        risk_category: riskCategory || 'unknown',
        calculator_type: calculatorType || 'unknown',
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        medical_context: true,
        anonymized: true,
        gdpr_compliant: true,
        value: 1
      });
      
      console.log('üìÑ PDF export tracked:', {
        type: calculatorType,
        category: riskCategory,
        language: language
      });
    };

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ (–∞–Ω–æ–Ω–∏–º–Ω–æ)
    window.trackLanguageChange = function(fromLanguage, toLanguage) {
      gtag('event', 'language_changed', {
        event_category: 'user_interface',
        event_label: (fromLanguage || 'unknown') + '_to_' + (toLanguage || 'unknown'),
        
        // –Ø–∑—ã–∫–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ)
        previous_language: fromLanguage || 'unknown',
        new_language: toLanguage || 'unknown',
        language_pair: (fromLanguage || 'unknown') + '_' + (toLanguage || 'unknown'),
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        interface_interaction: true,
        anonymized: true,
        gdpr_compliant: true,
        value: 1
      });
      
      console.log('üåê Language change tracked:', fromLanguage, '‚Üí', toLanguage);
    };
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ (–∞–Ω–æ–Ω–∏–º–Ω–æ)
    window.trackCalculatorUsage = function(interactionType, details, calculatorType) {
      gtag('event', 'calculator_interaction', {
        event_category: 'medical_tool_usage',
        event_label: (calculatorType || 'unknown') + '_' + (interactionType || 'unknown'),
        
        // –î–µ—Ç–∞–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ)
        interaction_type: interactionType || 'unknown',
        interaction_details: details || 'unknown',
        calculator_type: calculatorType || 'unknown',
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        medical_tool: true,
        anonymized: true,
        gdpr_compliant: true,
        data_minimized: true,
        value: 1
      });
    };
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã)
    window.trackTimeSpent = function(timeInSeconds, calculatorType) {
      const timeRange = getTimeRange(timeInSeconds);
      
      gtag('event', 'time_spent', {
        event_category: 'engagement',
        event_label: (calculatorType || 'unknown') + '_' + timeRange,
        
        // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã)
        time_range: timeRange,
        engagement_type: 'calculator_usage',
        calculator_type: calculatorType || 'unknown',
        session_quality: getSessionQuality(timeInSeconds),
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        medical_context: true,
        anonymized: true,
        gdpr_compliant: true,
        data_minimized: true,
        value: Math.min(Math.round(timeInSeconds || 0), 3600) // –ú–∞–∫—Å–∏–º—É–º 1 —á–∞—Å
      });
    };
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ (–∞–Ω–æ–Ω–∏–º–Ω–æ, –±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
    window.trackError = function(errorType, errorContext, calculatorType) {
      gtag('event', 'application_error', {
        event_category: 'technical_issues',
        event_label: (calculatorType || 'unknown') + '_' + (errorType || 'unknown'),
        
        // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ (–±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
        error_type: errorType || 'unknown',
        error_context: errorContext || 'unknown',
        calculator_type: calculatorType || 'unknown',
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        anonymized: true,
        gdpr_compliant: true,
        medical_tool: true,
        value: 1
      });
    };
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã)
    window.trackPerformance = function(metricName, value, calculatorType) {
      const performanceRange = getPerformanceRange(value);
      
      gtag('event', 'performance_metric', {
        event_category: 'technical_performance',
        event_label: (calculatorType || 'unknown') + '_' + (metricName || 'unknown'),
        
        // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–∞–Ω–æ–Ω–∏–º–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã)
        metric_name: metricName || 'unknown',
        metric_value_range: performanceRange,
        calculator_type: calculatorType || 'unknown',
        performance_category: getPerformanceCategory(value),
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        medical_application: true,
        anonymized: true,
        gdpr_compliant: true,
        data_minimized: true,
        value: Math.min(Math.round(value || 0), 10000)
      });
    };
    
    // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–ù–û–ù–ò–ú–ò–ó–ê–¶–ò–ò –î–ê–ù–ù–´–• ===
    
    function getRiskScoreRange(score) {
      if (!score || score < 0) return 'invalid';
      if (score < 1) return 'very_low';
      if (score < 5) return 'low';
      if (score < 10) return 'moderate';
      if (score < 20) return 'high';
      if (score < 50) return 'very_high';
      return 'extreme';
    }
    
    function getTimeRange(seconds) {
      if (!seconds || seconds < 0) return 'invalid';
      if (seconds < 10) return 'very_brief';
      if (seconds < 30) return 'brief';
      if (seconds < 120) return 'short';
      if (seconds < 300) return 'moderate';
      if (seconds < 600) return 'extended';
      if (seconds < 1800) return 'long';
      return 'very_long';
    }
    
    function getSessionQuality(seconds) {
      if (!seconds || seconds < 10) return 'bounce';
      if (seconds < 60) return 'quick_visit';
      if (seconds < 300) return 'engaged';
      if (seconds < 900) return 'highly_engaged';
      return 'deep_engagement';
    }
    
    function getPerformanceRange(value) {
      if (!value || value < 0) return 'invalid';
      if (value < 100) return 'excellent';
      if (value < 300) return 'good';
      if (value < 1000) return 'acceptable';
      if (value < 3000) return 'slow';
      return 'very_slow';
    }
    
    function getPerformanceCategory(value) {
      if (!value || value < 0) return 'unknown';
      if (value < 200) return 'fast';
      if (value < 1000) return 'normal';
      return 'needs_improvement';
    }
    
    // === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ò –ù–ê –°–¢–†–ê–ù–ò–¶–ï ===
    let startTime = Date.now();
    let lastActivityTime = Date.now();
    let calculatorType = 'unknown';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∏–∑ URL –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    function detectCalculatorType() {
      const url = window.location.href.toLowerCase();
      const title = document.title.toLowerCase();
      
      if (url.includes('gfr') || title.includes('gfr')) {
        return 'gfr_calculator';
      } else if (url.includes('cardio') || title.includes('cardio') || title.includes('cardiovascular')) {
        return 'cardiovascular_calculator';
      }
      return 'medical_calculator';
    }
    
    calculatorType = detectCalculatorType();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–∞–Ω–æ–Ω–∏–º–Ω–æ)
    ['click', 'scroll', 'keypress', 'mousemove', 'touchstart'].forEach(event => {
      document.addEventListener(event, function() {
        lastActivityTime = Date.now();
      }, { passive: true });
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–∞–Ω–æ–Ω–∏–º–Ω–æ)
    window.addEventListener('beforeunload', function() {
      const totalTime = (Date.now() - startTime) / 1000;
      const activeTime = (lastActivityTime - startTime) / 1000;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≤–µ–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏
      if (totalTime > 5 && activeTime > 3) {
        window.trackTimeSpent(activeTime, calculatorType);
      }
    });
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥)
    setInterval(function() {
      const currentTime = Date.now();
      const timeSinceLastActivity = (currentTime - lastActivityTime) / 1000;
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç, —Å—á–∏—Ç–∞–µ–º —Å–µ—Å—Å–∏—é –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π
      if (timeSinceLastActivity > 300) {
        const totalActiveTime = (lastActivityTime - startTime) / 1000;
        if (totalActiveTime > 10) {
          window.trackTimeSpent(totalActiveTime, calculatorType);
          startTime = currentTime; // –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞
        }
      }
    }, 30000);
    
    // === –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ü–ï–†–ï–•–û–î–û–í –ú–ï–ñ–î–£ –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê–ú–ò ===
    window.addEventListener('popstate', function() {
      const newCalculatorType = detectCalculatorType();
      if (newCalculatorType !== calculatorType) {
        gtag('event', 'calculator_switch', {
          event_category: 'navigation',
          event_label: calculatorType + '_to_' + newCalculatorType,
          previous_calculator: calculatorType,
          new_calculator: newCalculatorType,
          anonymized: true,
          gdpr_compliant: true,
          value: 1
        });
        calculatorType = newCalculatorType;
      }
    });
    
    // === –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ó–ê–ì–†–£–ó–ö–ò ===
    window.addEventListener('load', function() {
      // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
      setTimeout(function() {
        if (window.performance && window.performance.timing) {
          const timing = window.performance.timing;
          const loadTime = timing.loadEventEnd - timing.navigationStart;
          const domReady = timing.domContentLoadedEventEnd - timing.navigationStart;
          
          if (loadTime > 0 && loadTime < 60000) { // –†–∞–∑—É–º–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã
            window.trackPerformance('page_load_time', loadTime, calculatorType);
          }
          
          if (domReady > 0 && domReady < 60000) {
            window.trackPerformance('dom_ready_time', domReady, calculatorType);
          }
        }
      }, 1000);
    });
    
    // === –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –û–®–ò–ë–û–ö JAVASCRIPT (–ê–ù–û–ù–ò–ú–ù–û) ===
    window.addEventListener('error', function(event) {
      const errorType = event.error ? event.error.name : 'unknown_error';
      const errorContext = event.filename ? 'script_error' : 'general_error';
      
      window.trackError(errorType, errorContext, calculatorType);
    });
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
    window.addEventListener('unhandledrejection', function(event) {
      window.trackError('promise_rejection', 'async_error', calculatorType);
    });
    
    console.log('‚úÖ Google Analytics initialized with full GDPR compliance');
    console.log('üìä Tracking configuration:', {
      anonymized: true,
      gdprCompliant: true,
      cookieExpiry: '90 days',
      dataMinimized: true,
      calculatorType: calculatorType
    });
  `}
        </Script>

        <ThemeProvider attribute="class" defaultTheme="light" enableSystem>
          <CodeProtection />
          {children}
        </ThemeProvider>
      </body>
    </html>
  )
}
